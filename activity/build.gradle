plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'signing'
}

group 'org.tinylisp'
version '0.8-SNAPSHOT'

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 32

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'org.tinylisp.activity'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':engine')
    api project(':formatter')
    api 'androidx.appcompat:appcompat:1.5.1'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'com.googlecode.java-diff-utils:diffutils:1.3.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar) {
    from javadoc.outputs
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        // Define publication at configure time to pick up project-wide settings
        mavenJava(MavenPublication) {
            groupId group
            artifactId 'activity'
            version version
            artifact sourceJar
            artifact javadocJar
        }
    }
}

afterEvaluate {
    // Also do this after evaluate because the Android components don't exist yet otherwise; see
    // https://developer.android.com/studio/build/maven-publish-plugin
    publishing {
        publications {
            mavenJava {
                from components.release
            }
        }
    }
}

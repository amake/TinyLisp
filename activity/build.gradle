plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'com.jfrog.bintray'
}

group 'org.tinylisp'
version '0.4-SNAPSHOT'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':engine')
    api project(':formatter')
    api 'com.android.support:appcompat-v7:28.0.0'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'com.googlecode.java-diff-utils:diffutils:1.3.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar) {
    from javadoc.outputs
    classifier = 'javadoc'
}

publishing {
    publications {
        myPublication(MavenPublication) {
            artifact("$buildDir/outputs/aar/activity-release.aar")
            groupId group
            artifactId 'activity'
            version version
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['myPublication']
    pkg {
        repo = 'maven'
        name = 'tinylisp-activity'
    }
}

afterEvaluate {
    bintrayUpload {
        dependsOn assembleRelease
    }
}
